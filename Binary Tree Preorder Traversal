vector<int> preorderTraversal(TreeNode* root) {
        vector<int> ans;
        solve(ans,root);
        return ans;
    }
    
    void solve(vector<int>&ans,TreeNode* root) {
        if(root==NULL){
            return;
        }
        ans.push_back(root->val);
        solve(ans,root->left);
        solve(ans,root->right);

    }
    
    MT_2 (Stack)
    
    if(root==NULL){
        return ;
    }
    stack<TreeNode*> st;
    st.push(root);
    while(!st.empty()){
        root=st.top();
        st.pop();
        ans.push_back(root->val);
        if(root->right != NULL){
            st.push(root->right);
        }
        if(root->left != NULL){
            st.push(root->left);
        }
    }
